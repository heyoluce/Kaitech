plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.flywaydb.flyway' version '10.4.1'
}

group = 'system'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

def springBootVersion = '3.2.2'
def postgresqlVersion = '42.7.2'
def flywayVersion = '10.4.1'
def jpaVersion = '3.2.3'
def lombokVersion = "1.18.30"
def springWebVersion = "6.1.4"
def validatorVersion = '8.0.1.Final'

dependencies {
	implementation("org.springframework:spring-web:$springWebVersion")
	implementation "org.springframework.boot:spring-boot-starter:$springBootVersion"
	implementation "org.postgresql:postgresql:$postgresqlVersion"
	implementation "org.flywaydb:flyway-core:$flywayVersion"
	implementation("org.springframework.boot:spring-boot-starter-data-jpa:$jpaVersion")
	implementation("org.flywaydb:flyway-database-postgresql:10.4.1")
	implementation("org.hibernate.validator:hibernate-validator:$validatorVersion")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
	implementation "io.jsonwebtoken:jjwt-api:0.12.5"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:0.12.5"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.12.5"


	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.30'

	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.3.Final'
	implementation group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.5.3.Final'
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
	annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.5.3.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootJar {
    archiveFileName = "crm-system.jar"
	launchScript()
}

jar {
	enabled = true
}


task stage {
	dependsOn bootJar
	doLast {
		copy {
			from bootJar.archiveFile
			into projectDir
			rename { filename ->
				'crm-system.jar'
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}